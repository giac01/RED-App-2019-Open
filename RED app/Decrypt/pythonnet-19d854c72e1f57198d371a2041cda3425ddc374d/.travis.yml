dist: trusty
sudo: false
language: python
  
matrix:
  include:
# --------------------- XPLAT builds ------------------------
    - python: 2.7
      env: &xplat-env
        - BUILD_OPTS=--xplat
        - NUNIT_PATH=~/.nuget/packages/nunit.consolerunner/3.*/tools/nunit3-console.exe
      addons: &xplat-addons
        apt:
          sources:
          - sourceline: deb [arch=amd64] https://packages.microsoft.com/repos/microsoft-ubuntu-trusty-prod trusty main
            key_url: https://packages.microsoft.com/keys/microsoft.asc
          - sourceline: deb http://download.mono-project.com/repo/ubuntu trusty main
            key_url: http://keyserver.ubuntu.com/pks/lookup?op=get&search=0xA6A19B38D3D831EF
          packages:
            - mono-devel
            - ca-certificates-mono
            - dotnet-hostfxr-2.0.0
            - dotnet-runtime-2.0.0
            - dotnet-sdk-2.0.0
    - python: 3.3
      env: *xplat-env
      addons: *xplat-addons

    - python: 3.4
      env: *xplat-env
      addons: *xplat-addons

    - python: 3.5
      env: *xplat-env
      addons: *xplat-addons

    - python: 3.6
      env: *xplat-env
      addons: *xplat-addons
    - python: "3.7-dev"
      env: *xplat-env
      addons: *xplat-addons

# --------------------- Classic builds ------------------------
    - python: 2.7
      env: &classic-env
        - BUILD_OPTS=
        - NUNIT_PATH=./packages/NUnit.*/tools/nunit3-console.exe

    - python: 3.3
      env: *classic-env

    - python: 3.4
      env: *classic-env

    - python: 3.5
      env: *classic-env

    - python: 3.6
      env: *classic-env

    - python: "3.7-dev"
      env: *classic-env

  allow_failures:
    - python: "3.7-dev"
      env: *xplat-env

    - python: "3.7-dev"
      env: *classic-env

env:
  global:
    - LD_PRELOAD=/lib/x86_64-linux-gnu/libSegFault.so
    - SEGFAULT_SIGNALS=all
    - PYTHONUNBUFFERED=True
    - CODECOV_ENV=TRAVIS_PYTHON_VERSION

addons:
  apt:
    sources:
      - sourceline: deb http://download.mono-project.com/repo/ubuntu trusty main
        key_url: http://keyserver.ubuntu.com/pks/lookup?op=get&search=0xA6A19B38D3D831EF
    packages:
      - mono-devel
      - ca-certificates-mono

before_install:
  # Set-up dll path for embedded tests
  - PY_LIBDIR=$(python -c 'import sysconfig; print(sysconfig.get_config_var("LIBDIR"))')
  - export LD_LIBRARY_PATH=$PY_LIBDIR:$LD_LIBRARY_PATH

install:
  - pip install --upgrade setuptools # TEMP - due to setuptools 36.2.0 bug
  - pip install --upgrade -r requirements.txt
  - coverage run setup.py install $BUILD_OPTS

script:
  - python -m pytest
  - mono $NUNIT_PATH src/embed_tests/bin/Python.EmbeddingTest.dll
  - if [[ $BUILD_OPTS == --xplat ]]; then dotnet src/embed_tests/bin/netcoreapp2.0_publish/Python.EmbeddingTest.dll; fi

after_script:
  # Uncomment if need to geninterop, ie. py37 final
  # - python tools/geninterop/geninterop.py

  # Waiting on mono-coverage, SharpCover or xr.Baboon
  - coverage xml -i
  - codecov --file coverage.xml --flags setup_linux

notifications:
  email: false
  slack:
    secure: "UiQdSK1/uNnHl8/gQgfLj/F5JGxtJuaT3QYtKNcw3Ddpr3FX8tfXJ/RjsCsSlRQzDm7AdBAeMzcBQmvH4iRIV2y7qVywLyru5MPiwY4ZjMN6fJK/zaaxetOct9fasIBYzHguNPDAtiBGFh2iK1H1MXTY8rkmU3WZvl18b8EsrP0="
